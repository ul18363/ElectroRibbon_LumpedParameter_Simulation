function out = model
%
% ez_actuator_no_results_updated_2_no_hist.m
%
% Model exported on Jun 25 2020, 11:38 by COMSOL 5.5.0.359.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/home/bruno/Repositories/Personal/MATLAB_Dissertation/Mechanical_Simulation/COMSOL outsorced modelling/Try 1/comsol files');

model.label('ez_actuator_no_results_updated_2.mph');

model.param.set('thickness', '100e-6[m]', 'thickness of metal sheet');
model.param.set('length', '100e-3[m]+2*over_hang', 'length of metal sheet');
model.param.set('load', 'weight_mas*g_const', 'load');
model.param.set('weight_mas', '200[g]', 'flat');
model.param.set('base_width', '1e-2[m]', 'platform where load is placed');
model.param.set('width', '12.7e-3[m]', 'width of metal sheet');
model.param.set('over_hang', '5e-3[m]', 'length of sheet after contact point');
model.param.set('top_plate_y', 'thickness+2*thickness_polymer+3*sp', 'Starting point of the y component of corner of top plate');
model.param.set('thickness_polymer', '25e-6[m]');
model.param.set('sp', '0e-5[m]', 'separation between bodies to better visualize them');
model.param.set('y_ins_btm', 'sp+thickness');
model.param.set('y_inst_top', 'sp+thickness_polymer+y_ins_btm');
model.param.set('voltage', '12e4[V]');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.component('comp1').func.create('step1', 'Step');
model.component('comp1').func('step1').set('location', '1e-4/2');
model.component('comp1').func('step1').set('smooth', '1e-4');

model.component('comp1').mesh.create('mesh3');

model.geom.create('part1', 'Part', 2);
model.geom('part1').label('metal_sheet_part');
model.geom('part1').create('r3', 'Rectangle');
model.geom('part1').feature('r3').set('size', {'length' 'thickness'});
model.geom('part1').create('pt9', 'Point');
model.geom('part1').feature('pt9').label('Bottom_platform_left 1');
model.geom('part1').feature('pt9').set('p', {'length/2-base_width/2' '0'});
model.geom('part1').create('pt10', 'Point');
model.geom('part1').feature('pt10').label('Bottom_platform_right 1');
model.geom('part1').feature('pt10').set('p', {'length/2+base_width/2' '0'});
model.geom('part1').create('pt11', 'Point');
model.geom('part1').feature('pt11').label('Left_touch_point');
model.geom('part1').feature('pt11').set('p', {'over_hang' 'thickness+thickness_polymer+sp'});
model.geom('part1').create('pt12', 'Point');
model.geom('part1').feature('pt12').label('Right_touch_point');
model.geom('part1').feature('pt12').set('p', {'length-over_hang' 'thickness+thickness_polymer+sp'});
model.geom('part1').create('r4', 'Rectangle');
model.geom('part1').feature('r4').set('pos', {'0' 'thickness+sp'});
model.geom('part1').feature('r4').set('size', {'length' 'thickness_polymer'});
model.geom('part1').run;
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').label('metal_sheet_btm');
model.component('comp1').geom('geom1').feature('r1').set('size', {'length' 'thickness'});
model.component('comp1').geom('geom1').create('r5', 'Rectangle');
model.component('comp1').geom('geom1').feature('r5').label('insulator_tp');
model.component('comp1').geom('geom1').feature('r5').set('pos', {'0' 'thickness+sp'});
model.component('comp1').geom('geom1').feature('r5').set('size', {'length' 'thickness_polymer'});
model.component('comp1').geom('geom1').create('pt1', 'Point');
model.component('comp1').geom('geom1').feature('pt1').label('Bottom_platform_left');
model.component('comp1').geom('geom1').feature('pt1').set('p', {'length/2-base_width/2' '0'});
model.component('comp1').geom('geom1').create('pt2', 'Point');
model.component('comp1').geom('geom1').feature('pt2').label('Bottom_platform_right');
model.component('comp1').geom('geom1').feature('pt2').set('p', {'length/2+base_width/2' '0'});
model.component('comp1').geom('geom1').create('pt7', 'Point');
model.component('comp1').geom('geom1').feature('pt7').label('Left_contact_point_btm');
model.component('comp1').geom('geom1').feature('pt7').set('p', {'over_hang' 'thickness+thickness_polymer+sp'});
model.component('comp1').geom('geom1').create('pt8', 'Point');
model.component('comp1').geom('geom1').feature('pt8').label('Right_contact_point_btm');
model.component('comp1').geom('geom1').feature('pt8').set('p', {'length-over_hang' 'thickness+thickness_polymer+sp'});
model.component('comp1').geom('geom1').create('uni2', 'Union');
model.component('comp1').geom('geom1').feature('uni2').label('Bottom_plate');
model.component('comp1').geom('geom1').feature('uni2').selection('input').set({'pt1' 'pt2' 'pt7' 'pt8' 'r1' 'r5'});
model.component('comp1').geom('geom1').create('r6', 'Rectangle');
model.component('comp1').geom('geom1').feature('r6').label('insulator_btm');
model.component('comp1').geom('geom1').feature('r6').set('pos', {'0' 'thickness+thickness_polymer+sp*2'});
model.component('comp1').geom('geom1').feature('r6').set('size', {'length' 'thickness_polymer'});
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').label('metal_sheet_tp');
model.component('comp1').geom('geom1').feature('r2').set('pos', {'0' 'top_plate_y'});
model.component('comp1').geom('geom1').feature('r2').set('size', {'length' 'thickness'});
model.component('comp1').geom('geom1').create('pt5', 'Point');
model.component('comp1').geom('geom1').feature('pt5').label('Left_contact_point_tp');
model.component('comp1').geom('geom1').feature('pt5').set('p', {'over_hang' 'thickness+thickness_polymer+sp*2'});
model.component('comp1').geom('geom1').create('pt6', 'Point');
model.component('comp1').geom('geom1').feature('pt6').label('Right_contact_point_tp');
model.component('comp1').geom('geom1').feature('pt6').set('p', {'length-over_hang' 'thickness+thickness_polymer+sp*2'});
model.component('comp1').geom('geom1').create('pt3', 'Point');
model.component('comp1').geom('geom1').feature('pt3').label('Top_platform_left');
model.component('comp1').geom('geom1').feature('pt3').set('p', {'length/2-base_width/2' 'top_plate_y+thickness'});
model.component('comp1').geom('geom1').create('pt4', 'Point');
model.component('comp1').geom('geom1').feature('pt4').label('Top_platform_right');
model.component('comp1').geom('geom1').feature('pt4').set('p', {'length/2+base_width/2' 'top_plate_y+thickness'});
model.component('comp1').geom('geom1').create('uni1', 'Union');
model.component('comp1').geom('geom1').feature('uni1').label('Top_plate');
model.component('comp1').geom('geom1').feature('uni1').set('selresult', true);
model.component('comp1').geom('geom1').feature('uni1').set('selresultshow', 'all');
model.component('comp1').geom('geom1').feature('uni1').selection('input').set({'pt3' 'pt4' 'pt5' 'pt6' 'r2' 'r6'});
model.component('comp1').geom('geom1').create('r7', 'Rectangle');
model.component('comp1').geom('geom1').feature('r7').set('pos', {'length/2' '-length/40'});
model.component('comp1').geom('geom1').feature('r7').set('size', {'length/2' 'length/20'});
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'uni1' 'uni2'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r7'});
model.component('comp1').geom('geom1').create('spl1', 'Split');
model.component('comp1').geom('geom1').feature('spl1').selection('input').set({'dif1'});
model.component('comp1').geom('geom1').feature('fin').label('Form Assembly');
model.component('comp1').geom('geom1').feature('fin').set('action', 'assembly');
model.component('comp1').geom('geom1').run;

model.component('comp1').selection.create('sel1', 'Explicit');
model.component('comp1').selection.create('sel2', 'Explicit');
model.component('comp1').selection('sel2').geom('geom1', 1);
model.component('comp1').selection('sel2').set([13 16 17 18 19]);
model.component('comp1').selection.create('sel3', 'Explicit');
model.component('comp1').selection('sel3').geom('geom1', 1);
model.component('comp1').selection('sel3').set([1 2 3 4 7]);
model.component('comp1').selection('sel1').label('metal_sheets');
model.component('comp1').selection('sel2').label('top plate boundaries');
model.component('comp1').selection('sel3').label('bottom plate boundaries');

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('voltage', '6e3[V]*step1(t[1/s])');

model.view('view2').tag('view6');
model.view.create('view7', 'part1');
model.component('comp1').view('view1').hideObjects.create('hide1');
model.component('comp1').view('view1').hideEntities.create('hide1');
model.component('comp1').view.create('view2', 'geom1');
model.component('comp1').view.create('view3', 'geom1');
model.component('comp1').view('view3').hideEntities.create('hide1');
model.component('comp1').view('view3').hideEntities('hide1').set([3]);
model.view.create('view4', 'part1');

model.component('comp1').pair.create('p1', 'Identity');
model.component('comp1').pair('p1').source.set([8]);
model.component('comp1').pair('p1').destination.set([12]);
model.component('comp1').pair('ap7').manualSelection(true);
model.component('comp1').pair('ap7').source.set([3]);
model.component('comp1').pair('ap7').destination.set([7]);
model.component('comp1').pair('ap8').manualSelection(true);
model.component('comp1').pair('ap8').source.set([13]);
model.component('comp1').pair('ap8').destination.set([17]);
model.component('comp1').pair.create('p9', 'Contact');
model.component('comp1').pair('p9').source.set([9]);
model.component('comp1').pair('p9').destination.set([14]);

model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material.create('mat3', 'Common');
model.component('comp1').material.create('mat4', 'Common');
model.material.create('mat5', 'Common', '');
model.material.create('mat6', 'Common', '');
model.component('comp1').material('mat2').selection.set([1 4]);
model.component('comp1').material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat3').selection.set([2 3]);
model.component('comp1').material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat4').selection.allVoids;
model.component('comp1').material('mat4').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat4').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup('def').func.create('cs', 'Analytic');
model.component('comp1').material('mat4').propertyGroup('def').func.create('an1', 'Analytic');
model.component('comp1').material('mat4').propertyGroup('def').func.create('an2', 'Analytic');
model.component('comp1').material('mat4').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat4').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.material('mat5').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat6').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');

model.component('comp1').physics.create('solid', 'SolidMechanics', 'geom1');
model.component('comp1').physics('solid').create('gr1', 'Gravity', 2);
model.component('comp1').physics('solid').feature('gr1').selection.all;
model.component('comp1').physics('solid').create('fix2', 'Fixed', 1);
model.component('comp1').physics('solid').feature('fix2').selection.set([19]);
model.component('comp1').physics('solid').create('rig1', 'RigidConnector', 1);
model.component('comp1').physics('solid').feature('rig1').selection.set([4]);
model.component('comp1').physics('solid').feature('rig1').create('rf1', 'RigidBodyForce', -1);
model.component('comp1').physics('solid').create('bndl2', 'BoundaryLoad', 1);
model.component('comp1').physics('solid').feature('bndl2').selection.named('sel3');
model.component('comp1').physics('solid').create('bndl3', 'BoundaryLoad', 1);
model.component('comp1').physics('solid').feature('bndl3').selection.named('sel2');
model.component('comp1').physics('solid').create('cnt1', 'SolidContact', 1);
model.component('comp1').physics('solid').create('sym1', 'SymmetrySolid', 1);
model.component('comp1').physics('solid').feature('sym1').selection.set([5 10 15 20]);
model.component('comp1').physics('solid').create('cont1', 'Continuity', 1);
model.component('comp1').physics.create('esbe', 'ElectrostaticsBoundaryElements', 'geom1');
model.component('comp1').physics('esbe').selection.set([0 2 3]);
model.component('comp1').physics('esbe').feature('ccn1').selection('symsel1').set([4 5 7 10 14 15 17 20]);
model.component('comp1').physics('esbe').create('ccn2', 'ChargeConservation', 2);
model.component('comp1').physics('esbe').feature('ccn2').selection.set([2 3]);
model.component('comp1').physics('esbe').feature('ccn2').selection('symsel1').set([7 10 14 15 17]);
model.component('comp1').physics('esbe').create('init2', 'init1', 1);
model.component('comp1').physics('esbe').feature('init2').selection.named('sel2');
model.component('comp1').physics('esbe').create('init3', 'init1', 1);
model.component('comp1').physics('esbe').feature('init3').selection.named('sel3');
model.component('comp1').physics('esbe').create('term1', 'Terminal', 1);
model.component('comp1').physics('esbe').feature('term1').selection.named('sel2');
model.component('comp1').physics('esbe').create('term2', 'Terminal', 1);
model.component('comp1').physics('esbe').feature('term2').selection.named('sel3');

model.component('comp1').mesh('mesh3').create('map1', 'Map');
model.component('comp1').mesh('mesh3').feature('map1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh3').feature('map1').feature('dis1').selection.set([5 10 15 20]);

model.view('view6').label('Left Clip 1');
model.view('view6').set('locked', true);
model.view('view6').axis.set('xmin', -6.484308978542686E-4);
model.view('view6').axis.set('xmax', 0.008961677551269531);
model.view('view6').axis.set('ymin', -0.004835548344999552);
model.view('view6').axis.set('ymax', 0.005225575063377619);
model.view('view7').label('Right Clip 1');
model.view('view7').set('locked', true);
model.view('view7').axis.set('xmin', 0.10129968076944351);
model.view('view7').axis.set('xmax', 0.11287549883127213);
model.view('view7').axis.set('ymin', -0.0065008411183953285);
model.view('view7').axis.set('ymax', 0.0056182462722063065);
model.component('comp1').view('view1').label('Overall');
model.component('comp1').view('view1').axis.set('xmin', 0.004844312556087971);
model.component('comp1').view('view1').axis.set('xmax', 0.00513613224029541);
model.component('comp1').view('view1').axis.set('ymin', -4.77516878163442E-5);
model.component('comp1').view('view1').axis.set('ymax', 2.5776351685635746E-4);
model.component('comp1').view('view1').hideObjects('hide1').set({});
model.component('comp1').view('view2').label('Left Clip');
model.component('comp1').view('view2').set('locked', true);
model.component('comp1').view('view2').axis.set('xmin', -7.384642958641052E-5);
model.component('comp1').view('view2').axis.set('xmax', 0.005249945446848869);
model.component('comp1').view('view2').axis.set('ymin', -0.002644138177856803);
model.component('comp1').view('view2').axis.set('ymax', 0.002929506590589881);
model.component('comp1').view('view3').label('Right Clip');
model.component('comp1').view('view3').set('locked', true);
model.component('comp1').view('view3').axis.set('xmin', 0.10476824641227722);
model.component('comp1').view('view3').axis.set('xmax', 0.11015915870666504);
model.component('comp1').view('view3').axis.set('ymin', -0.002727207960560918);
model.component('comp1').view('view3').axis.set('ymax', 0.0029167074244469404);
model.view('view4').axis.set('xmin', -0.005500003695487976);
model.view('view4').axis.set('xmax', 0.11550000309944153);
model.view('view4').axis.set('ymin', -0.06321435421705246);
model.view('view4').axis.set('ymax', 0.06346435099840164);

model.component('comp1').pair('p1').label('Left Clip');
model.component('comp1').pair('p9').label('Contact Surfaces');

model.component('comp1').material('mat2').label('Steel AISI 4340');
model.component('comp1').material('mat2').set('family', 'steel');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat2').propertyGroup('def').descr('relpermeability_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('electricconductivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.component('comp1').material('mat2').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat2').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.component('comp1').material('mat2').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('Enu').set('youngsmodulus', '205e9[Pa]');
model.component('comp1').material('mat2').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('Enu').set('poissonsratio', '0.28');
model.component('comp1').material('mat2').propertyGroup('Enu').descr('poissonsratio_symmetry', '');
model.component('comp1').material('mat3').label('Polyethylene');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'150e-6[1/K]' '0' '0' '0' '150e-6[1/K]' '0' '0' '0' '150e-6[1/K]'});
model.component('comp1').material('mat3').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('heatcapacity', '1900[J/(kg*K)]');
model.component('comp1').material('mat3').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity', {'2.3' '0' '0' '0' '2.3' '0' '0' '0' '2.3'});
model.component('comp1').material('mat3').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('density', '930[kg/m^3]');
model.component('comp1').material('mat3').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalconductivity', {'0.38[W/(m*K)]' '0' '0' '0' '0.38[W/(m*K)]' '0' '0' '0' '0.38[W/(m*K)]'});
model.component('comp1').material('mat3').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('Enu').set('youngsmodulus', '1e9[Pa]');
model.component('comp1').material('mat3').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('Enu').set('poissonsratio', '0.46');
model.component('comp1').material('mat3').propertyGroup('Enu').descr('poissonsratio_symmetry', '');
model.component('comp1').material('mat4').label('Air');
model.component('comp1').material('mat4').set('family', 'air');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02897/R_const/T,pA)'; 'T' 'd(pA*0.02897/R_const/T,T)'});
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('argunit', 'Pa,K');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('plotargs', {'pA' '0' '1'; 'T' '0' '1'});
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('args', {'T'});
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('dermethod', 'manual');
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.component('comp1').material('mat4').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('argunit', 'Pa,K');
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('fununit', '1/K');
model.component('comp1').material('mat4').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('funcname', 'muB');
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('args', {'T'});
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.component('comp1').material('mat4').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.component('comp1').material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.component('comp1').material('mat4').propertyGroup('def').set('molarmass', '');
model.component('comp1').material('mat4').propertyGroup('def').set('bulkviscosity', '');
model.component('comp1').material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.component('comp1').material('mat4').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.component('comp1').material('mat4').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.component('comp1').material('mat4').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').descr('molarmass_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').descr('bulkviscosity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat4').propertyGroup('def').descr('relpermeability_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat4').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat4').propertyGroup('def').descr('dynamicviscosity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat4').propertyGroup('def').descr('ratioofspecificheat_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.component('comp1').material('mat4').propertyGroup('def').descr('electricconductivity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat4').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('density', 'rho(pA,T)');
model.component('comp1').material('mat4').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat4').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('soundspeed', 'cs(T)');
model.component('comp1').material('mat4').propertyGroup('def').descr('soundspeed_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat4').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').descr('n_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').descr('ki_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('NonlinearModel').set('BA', '(def.gamma+1)/2');
model.component('comp1').material('mat4').propertyGroup('NonlinearModel').descr('BA_symmetry', '');
model.material('mat5').label('Steel AISI 4340.1');
model.material('mat5').set('family', 'steel');
model.material('mat5').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').descr('relpermeability_symmetry', '');
model.material('mat5').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.material('mat5').propertyGroup('def').descr('electricconductivity_symmetry', '');
model.material('mat5').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.material('mat5').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.material('mat5').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.material('mat5').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.material('mat5').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat5').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.material('mat5').propertyGroup('def').set('density', '7850[kg/m^3]');
model.material('mat5').propertyGroup('def').descr('density_symmetry', '');
model.material('mat5').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.material('mat5').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.material('mat5').propertyGroup('Enu').set('youngsmodulus', '205e9[Pa]');
model.material('mat5').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.material('mat5').propertyGroup('Enu').set('poissonsratio', '0.28');
model.material('mat5').propertyGroup('Enu').descr('poissonsratio_symmetry', '');
model.material('mat6').active(false);
model.material('mat6').label('Polyethylene 1');
model.material('mat6').propertyGroup('def').set('thermalexpansioncoefficient', {'150e-6[1/K]' '0' '0' '0' '150e-6[1/K]' '0' '0' '0' '150e-6[1/K]'});
model.material('mat6').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.material('mat6').propertyGroup('def').set('heatcapacity', '1900[J/(kg*K)]');
model.material('mat6').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.material('mat6').propertyGroup('def').set('relpermittivity', {'2.3' '0' '0' '0' '2.3' '0' '0' '0' '2.3'});
model.material('mat6').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.material('mat6').propertyGroup('def').set('density', '930[kg/m^3]');
model.material('mat6').propertyGroup('def').descr('density_symmetry', '');
model.material('mat6').propertyGroup('def').set('thermalconductivity', {'0.38[W/(m*K)]' '0' '0' '0' '0.38[W/(m*K)]' '0' '0' '0' '0.38[W/(m*K)]'});
model.material('mat6').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.material('mat6').propertyGroup('Enu').set('youngsmodulus', '1e9[Pa]');
model.material('mat6').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.material('mat6').propertyGroup('Enu').set('poissonsratio', '0.46');
model.material('mat6').propertyGroup('Enu').descr('poissonsratio_symmetry', '');

model.component('comp1').physics('solid').prop('d').set('d', '12.7e-3');
model.component('comp1').physics('solid').feature('lemm1').set('AdditiveStrainDecomposition', true);
model.component('comp1').physics('solid').feature('fix2').label('Top_base');
model.component('comp1').physics('solid').feature('rig1').set('Direction', [1; 0; 0]);
model.component('comp1').physics('solid').feature('rig1').set('RotationType', 'PrescribedRotationGroup');
model.component('comp1').physics('solid').feature('rig1').label('Rigid Bottom plate');
model.component('comp1').physics('solid').feature('rig1').feature('rf1').set('Ft', {'0'; '-load'; '0'});
model.component('comp1').physics('solid').feature('bndl2').set('FperArea', {'-esbe.unTx '; '-esbe.unTy'; '0'});
model.component('comp1').physics('solid').feature('bndl2').label('Electrostatic Force over bottom metal plate');
model.component('comp1').physics('solid').feature('bndl3').set('FperArea', {'-esbe.unTx '; '-esbe.unTy'; '0'});
model.component('comp1').physics('solid').feature('bndl3').label('Electrostatic Force over top metal plate');
model.component('comp1').physics('solid').feature('cnt1').set('tolcontact', '0.11000052545329046*1e-4');
model.component('comp1').physics('solid').feature('cnt1').set('pairs', 'p9');
model.component('comp1').physics('solid').feature('cont1').set('pairs', {'ap7'; 'ap8'; 'p1'});
model.component('comp1').physics('esbe').prop('Symmetry').set('sym1', 'even');
model.component('comp1').physics('esbe').prop('Symmetry').set('sym1plane', 'length/2');
model.component('comp1').physics('esbe').feature('ccn1').label('Charge Conservation 1: Air');
model.component('comp1').physics('esbe').feature('ccn2').selection('symsel1').set([7 10 14 15 17]);
model.component('comp1').physics('esbe').feature('ccn2').label('Charge Conservation 2: Dielectric');
model.component('comp1').physics('esbe').feature('init2').set('V', 'voltage');
model.component('comp1').physics('esbe').feature('init2').label('Initial Values Top');
model.component('comp1').physics('esbe').feature('init3').set('V', '-voltage');
model.component('comp1').physics('esbe').feature('init3').label('Initial Values Bottom');
model.component('comp1').physics('esbe').feature('term1').set('TerminalType', 'Voltage');
model.component('comp1').physics('esbe').feature('term1').set('V0', 'voltage');
model.component('comp1').physics('esbe').feature('term1').label('BC Top');
model.component('comp1').physics('esbe').feature('term2').set('TerminalType', 'Voltage');
model.component('comp1').physics('esbe').feature('term2').set('V0', '-voltage');
model.component('comp1').physics('esbe').feature('term2').label('BC Bottom');

model.component('comp1').mesh('mesh3').feature('size').set('hauto', 2);
model.component('comp1').mesh('mesh3').feature('map1').set('adjustedgdistr', true);
model.component('comp1').mesh('mesh3').feature('map1').feature('dis1').set('numelem', 2);
model.component('comp1').mesh('mesh3').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/cnt1' 'solid/bndl2' 'solid/bndl3' 'esbe'});
model.study('std2').feature('stat').set('activate', {'solid' 'on' 'esbe' 'off' 'frame:spatial1' 'on' 'frame:material1' 'on'});
model.study('std2').feature('time').set('disabledphysics', {'solid/cnt1' 'solid/bndl3'});

model.sol.create('sol1');
model.sol('sol1').study('std2');
model.sol('sol1').attach('std2');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature.remove('fcDef');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('data', 'dset1');
model.result('pg1').feature('surf1').create('def1', 'Deform');
model.result.export.create('anim1', 'Animation');

model.nodeGroup.create('dset3solidlgrp', 'Results');
model.nodeGroup('dset3solidlgrp').set('type', 'plotgroup');
model.nodeGroup('dset3solidlgrp').placeAfter([]);

model.study('std2').label('Study 1');
model.study('std2').feature('stat').label('Stationary: No electrostatics');
model.study('std2').feature('time').set('tlist', 'range(0,1e-8,1e-5)');
model.study('std2').feature('time').set('plot', true);
model.study('std2').feature('time').set('plotfreq', 'tsteps');

model.sol('sol1').attach('std2');
model.sol('sol1').feature('v1').set('clist', {'1.0E-8[s]'});
model.sol('sol1').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.055000568178883394');
model.sol('sol1').feature('v1').feature('comp1_solid_uv_rig1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_uv_rig1').set('scaleval', '1e-2*0.055000568178883394');
model.sol('sol1').feature('v1').feature('comp1_solid_phi_rig1').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_phi_rig1').set('scaleval', '1e-2');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('fc1').set('dtech', 'const');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 50);
model.sol('sol1').feature('s1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('s1').feature('fc1').set('aaccdim', 50);
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('resscalemethod', 'manual');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('clist', {'range(0,1e-8,1e-5)' '1.0E-8[s]'});
model.sol('sol1').feature('v2').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_u').set('scaleval', '1e-2*0.055000568178883394');
model.sol('sol1').feature('v2').feature('comp1_solid_uv_rig1').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_uv_rig1').set('scaleval', '1e-2*0.055000568178883394');
model.sol('sol1').feature('v2').feature('comp1_solid_phi_rig1').set('scalemethod', 'manual');
model.sol('sol1').feature('v2').feature('comp1_solid_phi_rig1').set('scaleval', '1e-2');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,1e-8,1e-5)');
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'intermediate');
model.sol('sol1').feature('t1').set('predictor', 'constant');
model.sol('sol1').feature('t1').set('plot', true);
model.sol('sol1').feature('t1').set('plotfreq', 'tsteps');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'onevery');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('plot', true);
model.sol('sol1').runAll;

model.result('pg1').label('Displacement (solid)');
model.result('pg1').set('looplevel', [1]);
model.result('pg1').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').feature('def1').set('scaleactive', true);
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('maxframes', 11);
model.result.export('anim1').set('shownparameter', '0');
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'off');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');

model.nodeGroup('dset3solidlgrp').label('Applied Loads (solid) ');

out = model;
