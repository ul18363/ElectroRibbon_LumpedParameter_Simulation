function out = model
%
% FlangeModel.m
%
% Model exported on Aug 12 2020, 00:33 by COMSOL 5.5.0.359.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('C:\Users\Bruno\Documents\DISSERTATION\Mechanical_Simulation\Mass Spring Models\COMSOL_TO_MATLAB_SANDBOX');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);
model.component('comp1').geom('geom1').create('pol1', 'Polygon');
model.component('comp1').geom('geom1').feature('pol1').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol1').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol1').set('table', [-0.01 0; 0 0; 4.47921E-8 -1.82E-14; 8.95841E-8 -7.28E-14; 1.34376E-7 -1.64E-13; 1.79168E-7 -2.91E-13; 2.2396E-7 -4.55E-13; 2.68752E-7 -6.55E-13; 3.13544E-7 -8.91E-13; 3.58337E-7 -1.16E-12; 4.03129E-7 -1.47E-12; 4.47921E-7 -1.82E-12; 8.95841E-7 -7.28E-12; 1.34376E-6 -1.64E-11; 1.79168E-6 -2.91E-11; 2.2396E-6 -4.55E-11; 2.68752E-6 -6.55E-11; 3.13544E-6 -8.91E-11; 3.58336E-6 -1.16E-10; 4.03128E-6 -1.47E-10; 4.4792E-6 -1.82E-10; 8.95837E-6 -7.28E-10; 1.34375E-5 -1.64E-9; 1.79167E-5 -2.91E-9; 2.23958E-5 -4.55E-9; 2.68749E-5 -6.55E-9; 3.13539E-5 -8.91E-9; 3.5833E-5 -1.16E-8; 4.0312E-5 -1.47E-8; 4.4791E-5 -1.82E-8; 8.95798E-5 -7.27E-8; 1.34367E-4 -1.63E-7; 1.79151E-4 -2.9E-7; 2.23933E-4 -4.53E-7; 2.68714E-4 -6.52E-7; 3.13492E-4 -8.87E-7; 3.58268E-4 -1.16E-6; 4.03042E-4 -1.46E-6; 4.47814E-4 -1.81E-6; 8.95416E-4 -7.18E-6; 0.001342811 -1.6E-5; 0.001790003 -2.83E-5; 0.002236997 -4.4E-5; 0.002683796 -6.29E-5; 0.003130406 -8.5E-5; 0.00357683 -1.1E-4; 0.004023072 -1.39E-4; 0.004469138 -1.7E-4; 0.008921007 -6.31E-4; 0.013359912 -0.00131; 0.017790158 -0.00214; 0.02221605 -0.00304; 0.026641894 -0.00394; 0.031071995 -0.00477; 0.035510657 -0.00546; 0.039962186 -0.00593; 0.044430887 -0.006115478; 0.049430887 -0.006115478]);
model.component('comp1').geom('geom1').create('copy3', 'Copy');
model.component('comp1').geom('geom1').feature('copy3').set('disply', -1.0E-4);
model.component('comp1').geom('geom1').feature('copy3').selection('input').set({'pol1'});
model.component('comp1').geom('geom1').create('copy5', 'Copy');
model.component('comp1').geom('geom1').feature('copy5').set('disply', 1.3E-4);
model.component('comp1').geom('geom1').feature('copy5').selection('input').set({'pol1'});
model.component('comp1').geom('geom1').create('ls1', 'LineSegment');
model.component('comp1').geom('geom1').feature('ls1').selection('vertex1').set('copy3(1)', 1);
model.component('comp1').geom('geom1').feature('ls1').selection('vertex2').set('pol1(1)', 1);
model.component('comp1').geom('geom1').create('ls2', 'LineSegment');
model.component('comp1').geom('geom1').feature('ls2').selection('vertex1').set('ls1(1)', 2);
model.component('comp1').geom('geom1').feature('ls2').selection('vertex2').set('copy5(1)', 1);
model.component('comp1').geom('geom1').create('mir4', 'Mirror');
model.component('comp1').geom('geom1').feature('mir4').set('keep', true);
model.component('comp1').geom('geom1').feature('mir4').set('pos', [0 1.3E-4]);
model.component('comp1').geom('geom1').feature('mir4').set('axis', [0 1]);
model.component('comp1').geom('geom1').feature('mir4').selection('input').set({'copy3' 'copy5' 'ls1' 'ls2' 'pol1'});
model.component('comp1').geom('geom1').create('mir5', 'Mirror');
model.component('comp1').geom('geom1').feature('mir5').set('keep', true);
model.component('comp1').geom('geom1').feature('mir5').set('pos', [0.049430887 0]);
model.component('comp1').geom('geom1').feature('mir5').set('axis', [1 0]);
model.component('comp1').geom('geom1').feature('mir5').selection('input').set({'copy3' 'copy5' 'ls1' 'ls2' 'mir4' 'pol1'});
model.component('comp1').geom('geom1').create('csol5', 'ConvertToSolid');
model.component('comp1').geom('geom1').feature('csol5').label('bottom_metal_sheet');
model.component('comp1').geom('geom1').feature('csol5').set('keep', true);
model.component('comp1').geom('geom1').feature('csol5').selection('input').set({'copy3' 'ls1' 'mir5(1)' 'mir5(10)' 'mir5(3)' 'pol1'});
model.component('comp1').geom('geom1').create('csol4', 'ConvertToSolid');
model.component('comp1').geom('geom1').feature('csol4').label('bottom_insulator');
model.component('comp1').geom('geom1').feature('csol4').set('keep', true);
model.component('comp1').geom('geom1').feature('csol4').selection('input').set({'copy5' 'ls2' 'mir4(2)' 'mir5(10)' 'mir5(2)' 'mir5(4)' 'pol1'});
model.component('comp1').geom('geom1').create('csol7', 'ConvertToSolid');
model.component('comp1').geom('geom1').feature('csol7').label('top_insulator');
model.component('comp1').geom('geom1').feature('csol7').set('keep', true);
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'copy5' 'mir4(2)' 'mir4(4)' 'mir4(5)' 'mir5(6)' 'mir5(8)' 'mir5(9)'});
model.component('comp1').geom('geom1').create('csol6', 'ConvertToSolid');
model.component('comp1').geom('geom1').feature('csol6').label('top_metal_sheet');
model.component('comp1').geom('geom1').feature('csol6').set('keep', true);
model.component('comp1').geom('geom1').feature('csol6').selection('input').set({'mir4(1)' 'mir4(3)' 'mir4(5)' 'mir5(5)' 'mir5(7)' 'mir5(9)'});
model.component('comp1').geom('geom1').create('del3', 'Delete');
model.component('comp1').geom('geom1').feature('del3').selection('input').init;
model.component('comp1').geom('geom1').feature('del3').selection('input').set({'copy3' 'copy5' 'ls1' 'ls2' 'mir4' 'mir5' 'pol1'});
model.component('comp1').geom('geom1').create('r4', 'Rectangle');
model.component('comp1').geom('geom1').feature('r4').set('pos', {'-.1' '-.1'});
model.component('comp1').geom('geom1').feature('r4').set('size', [0.3 0.2]);
model.component('comp1').geom('geom1').run;

model.component('comp1').selection.create('test_sel', 'Explicit');
model.component('comp1').selection('test_sel').geom('geom1', 2, 1, {'exterior'});
model.component('comp1').selection('test_sel').set([8]);
model.component('comp1').selection.remove('test_sel');
model.component('comp1').selection.create('sel7', 'Explicit');
model.component('comp1').selection('sel7').geom('geom1', 2, 1, {'exterior'});
model.component('comp1').selection('sel7').set([2]);
model.component('comp1').selection('sel7').label('bottom_plate');
model.component('comp1').selection('sel7').tag('bottom_plate');
model.component('comp1').selection.create('sel17', 'Explicit');
model.component('comp1').selection('sel17').geom('geom1', 2, 1, {'exterior'});
model.component('comp1').selection('sel17').set([3]);
model.component('comp1').selection('sel17').label('bottom_insulator');
model.component('comp1').selection('sel17').tag('bottom_insulator');
model.component('comp1').selection.create('sel16', 'Explicit');
model.component('comp1').selection('sel16').geom('geom1', 2, 1, {'exterior'});
model.component('comp1').selection('sel16').set([4]);
model.component('comp1').selection('sel16').label('top_insulator');
model.component('comp1').selection('sel16').tag('top_insulator');
model.component('comp1').selection.create('sel6', 'Explicit');
model.component('comp1').selection('sel6').geom('geom1', 2, 1, {'exterior'});
model.component('comp1').selection('sel6').set([5]);
model.component('comp1').selection('sel6').label('top_plate');
model.component('comp1').selection('sel6').tag('top_plate');
model.component('comp1').selection.create('sel18', 'Explicit');
model.component('comp1').selection('sel18').set([2 3 4 5]);
model.component('comp1').selection('sel18').label('actuator');
model.component('comp1').selection('sel18').tag('actuator');
model.component('comp1').selection.create('electrodes', 'Explicit');
model.component('comp1').selection('electrodes').set([2 5]);
model.component('comp1').selection('electrodes').label('electrodes');
model.component('comp1').selection.create('all_but_electrodes', 'Complement');
model.component('comp1').selection('all_but_electrodes').label('all_but_electrodes');
model.component('comp1').selection('all_but_electrodes').set('input', 'electrodes');
model.component('comp1').selection.create('sel19', 'Explicit');
model.component('comp1').selection('sel19').set([1 7]);
model.component('comp1').selection('sel19').label('surrounding');
model.component('comp1').selection('sel19').tag('surrounding');
model.component('comp1').selection.create('interior_oil', 'Explicit');
model.component('comp1').selection('interior_oil').set([7]);
model.component('comp1').selection('interior_oil').label('interior_oil');
model.component('comp1').selection.create('sel20', 'Explicit');
model.component('comp1').selection('sel20').geom('geom1', 2, 1, {'exterior' 'interior'});
model.component('comp1').selection('sel20').set([1 7]);
model.component('comp1').selection('sel20').label('surrounding_surfaces');
model.component('comp1').selection('sel20').tag('surrounding_surfaces');
model.component('comp1').selection.create('uni1', 'Union');
model.component('comp1').selection('uni1').label('universe');
model.component('comp1').selection('uni1').set('input', {'actuator' 'surrounding'});
model.component('comp1').selection('uni1').tag('universe');
model.component('comp1').selection.create('sel2', 'Explicit');
model.component('comp1').selection('sel2').set([3 4]);
model.component('comp1').selection('sel2').label('insulator');
model.component('comp1').selection('sel2').tag('insulator');
model.component('comp1').selection.create('sel23', 'Explicit');
model.component('comp1').selection('sel23').set([3]);
model.component('comp1').selection('sel23').label('bottom_insulator_domain');
model.component('comp1').selection('sel23').tag('bottom_insulator_domain');
model.component('comp1').selection.create('sel24', 'Explicit');
model.component('comp1').selection('sel24').set([4]);
model.component('comp1').selection('sel24').label('top_insulator_domain');
model.component('comp1').selection('sel24').tag('top_insulator_domain');
model.component('comp1').selection.create('com1', 'Complement');
model.component('comp1').selection('com1').label('noise_islands');
model.component('comp1').selection('com1').set('input', 'universe');
model.component('comp1').selection('com1').tag('noise_islands');
model.component('comp1').selection.create('adj1', 'Adjacent');
model.component('comp1').selection('adj1').label('noise_islands_surfaces');
model.component('comp1').selection('adj1').set('input', 'noise_islands');
model.component('comp1').selection('adj1').tag('noise_islands_surfaces');
model.component('comp1').selection.create('int2', 'Intersection');
model.component('comp1').selection('int2').set('entitydim', 1);
model.component('comp1').selection('int2').label('bottom_interface_all');
model.component('comp1').selection('int2').set('input', {'bottom_plate' 'bottom_insulator'});
model.component('comp1').selection('int2').tag('bottom_interface_all');
model.component('comp1').selection.create('int3', 'Intersection');
model.component('comp1').selection('int3').set('entitydim', 1);
model.component('comp1').selection('int3').label('top_interface_all');
model.component('comp1').selection('int3').set('input', {'top_insulator' 'top_plate'});
model.component('comp1').selection('int3').tag('top_interface_all');
model.component('comp1').selection.create('sel21', 'Explicit');
model.component('comp1').selection('sel21').geom('geom1', 1);
model.component('comp1').selection('sel21').set([4]);
model.component('comp1').selection('sel21').label('left_edges');
model.component('comp1').selection('sel21').set('groupcontang', true);
model.component('comp1').selection('sel21').tag('left_edges');
model.component('comp1').selection.create('sel22', 'Explicit');
model.component('comp1').selection('sel22').geom('geom1', 1);
model.component('comp1').selection('sel22').set([575]);
model.component('comp1').selection('sel22').label('right_edges');
model.component('comp1').selection('sel22').set('groupcontang', true);
model.component('comp1').selection('sel22').tag('right_edges');
model.component('comp1').selection.create('adj2', 'Adjacent');
model.component('comp1').selection('adj2').set('entitydim', 1);
model.component('comp1').selection('adj2').label('right_edge_horiz');
model.component('comp1').selection('adj2').set('input', 'right_edges');
model.component('comp1').selection('adj2').tag('right_edge_horiz');
model.component('comp1').selection.create('adj3', 'Adjacent');
model.component('comp1').selection('adj3').set('entitydim', 1);
model.component('comp1').selection('adj3').label('left_edge_horiz');
model.component('comp1').selection('adj3').set('input', 'left_edges');
model.component('comp1').selection('adj3').tag('left_edge_horiz');
model.component('comp1').selection.create('uni4', 'Union');
model.component('comp1').selection('uni4').set('entitydim', 1);
model.component('comp1').selection('uni4').label('clip_edges');
model.component('comp1').selection('uni4').set('input', {'left_edges' 'left_edge_horiz' 'right_edges' 'right_edge_horiz'});
model.component('comp1').selection('uni4').tag('clip_edges');
model.component('comp1').selection.create('int4', 'Intersection');
model.component('comp1').selection('int4').set('entitydim', 1);
model.component('comp1').selection('int4').label('bottom_plate_exteriors');
model.component('comp1').selection('int4').set('input', {'bottom_plate' 'surrounding_surfaces'});
model.component('comp1').selection('int4').tag('bottom_plate_exteriors');
model.component('comp1').selection.create('dif7', 'Difference');
model.component('comp1').selection('dif7').set('entitydim', 1);
model.component('comp1').selection('dif7').label('bottom_exposed_electrode_all');
model.component('comp1').selection('dif7').set('add', 'bottom_plate_exteriors');
model.component('comp1').selection('dif7').set('subtract', {'left_edges' 'right_edges'});
model.component('comp1').selection('dif7').tag('bottom_exposed_electrode_all');
model.component('comp1').selection.create('int5', 'Intersection');
model.component('comp1').selection('int5').set('entitydim', 1);
model.component('comp1').selection('int5').label('top_plate_exteriors');
model.component('comp1').selection('int5').set('input', {'top_plate' 'surrounding_surfaces'});
model.component('comp1').selection('int5').tag('top_plate_exteriors');
model.component('comp1').selection.create('dif8', 'Difference');
model.component('comp1').selection('dif8').set('entitydim', 1);
model.component('comp1').selection('dif8').label('top_exposed_electrode_all');
model.component('comp1').selection('dif8').set('add', 'top_plate_exteriors');
model.component('comp1').selection('dif8').set('subtract', {'left_edges' 'right_edges'});
model.component('comp1').selection('dif8').tag('top_exposed_electrode_all');
model.component('comp1').selection.create('int6', 'Intersection');
model.component('comp1').selection('int6').set('entitydim', 1);
model.component('comp1').selection('int6').label('bottom_noise_surfaces');
model.component('comp1').selection('int6').set('input', {'bottom_insulator' 'noise_islands_surfaces'});
model.component('comp1').selection('int6').tag('bottom_noise_surfaces');
model.component('comp1').selection.create('int7', 'Intersection');
model.component('comp1').selection('int7').set('entitydim', 1);
model.component('comp1').selection('int7').label('insulators_touch_points');
model.component('comp1').selection('int7').set('input', {'bottom_insulator' 'top_insulator'});
model.component('comp1').selection('int7').tag('insulators_touch_points');
model.component('comp1').selection.create('int8', 'Intersection');
model.component('comp1').selection('int8').set('entitydim', 1);
model.component('comp1').selection('int8').label('bottom_insulator_exposed_to_oil');
model.component('comp1').selection('int8').set('input', {'bottom_insulator' 'surrounding_surfaces'});
model.component('comp1').selection('int8').tag('bottom_insulator_exposed_to_oil');
model.component('comp1').selection.create('uni2', 'Union');
model.component('comp1').selection('uni2').set('entitydim', 1);
model.component('comp1').selection('uni2').label('bottom_exposed_insulator_all');
model.component('comp1').selection('uni2').set('input', {'bottom_noise_surfaces' 'insulators_touch_points' 'bottom_insulator_exposed_to_oil'});
model.component('comp1').selection('uni2').tag('bottom_exposed_insulator_all');
model.component('comp1').selection.create('int9', 'Intersection');
model.component('comp1').selection('int9').set('entitydim', 1);
model.component('comp1').selection('int9').label('top_noise_surfaces');
model.component('comp1').selection('int9').set('input', {'top_insulator' 'noise_islands_surfaces'});
model.component('comp1').selection('int9').tag('top_noise_surfaces');
model.component('comp1').selection.create('int10', 'Intersection');
model.component('comp1').selection('int10').set('entitydim', 1);
model.component('comp1').selection('int10').label('top_insulator_exposed_to_oil');
model.component('comp1').selection('int10').set('input', {'top_insulator' 'surrounding_surfaces'});
model.component('comp1').selection('int10').tag('top_insulator_exposed_to_oil');
model.component('comp1').selection.create('uni3', 'Union');
model.component('comp1').selection('uni3').set('entitydim', 1);
model.component('comp1').selection('uni3').label('top_exposed_insulator_all');
model.component('comp1').selection('uni3').set('input', {'insulators_touch_points' 'top_noise_surfaces' 'top_insulator_exposed_to_oil'});
model.component('comp1').selection('uni3').tag('top_exposed_insulator_all');
model.component('comp1').selection.create('dif3', 'Difference');
model.component('comp1').selection('dif3').set('entitydim', 1);
model.component('comp1').selection('dif3').label('bottom_exposed_electrode');
model.component('comp1').selection('dif3').set('add', 'bottom_exposed_electrode_all');
model.component('comp1').selection('dif3').set('subtract', 'clip_edges');
model.component('comp1').selection('dif3').tag('bottom_exposed_electrode');
model.component('comp1').selection.create('bottom_interface', 'Difference');
model.component('comp1').selection('bottom_interface').set('entitydim', 1);
model.component('comp1').selection('bottom_interface').label('bottom_interface');
model.component('comp1').selection('bottom_interface').set('add', 'bottom_interface_all');
model.component('comp1').selection('bottom_interface').set('subtract', 'clip_edges');
model.component('comp1').selection.create('dif5', 'Difference');
model.component('comp1').selection('dif5').set('entitydim', 1);
model.component('comp1').selection('dif5').label('bottom_exposed_insulator');
model.component('comp1').selection('dif5').set('add', 'bottom_exposed_insulator_all');
model.component('comp1').selection('dif5').set('subtract', 'clip_edges');
model.component('comp1').selection('dif5').tag('bottom_exposed_insulator');
model.component('comp1').selection.create('dif6', 'Difference');
model.component('comp1').selection('dif6').set('entitydim', 1);
model.component('comp1').selection('dif6').label('top_exposed_insulator');
model.component('comp1').selection('dif6').set('add', 'top_exposed_insulator_all');
model.component('comp1').selection('dif6').set('subtract', 'clip_edges');
model.component('comp1').selection('dif6').tag('top_exposed_insulator');
model.component('comp1').selection.create('top_interface', 'Difference');
model.component('comp1').selection('top_interface').set('entitydim', 1);
model.component('comp1').selection('top_interface').label('top_interface');
model.component('comp1').selection('top_interface').set('add', 'top_interface_all');
model.component('comp1').selection('top_interface').set('subtract', 'clip_edges');
model.component('comp1').selection.create('dif4', 'Difference');
model.component('comp1').selection('dif4').set('entitydim', 1);
model.component('comp1').selection('dif4').label('top_exposed_electrode');
model.component('comp1').selection('dif4').set('add', 'top_exposed_electrode_all');
model.component('comp1').selection('dif4').set('subtract', 'clip_edges');
model.component('comp1').selection('dif4').tag('top_exposed_electrode');

model.nodeGroup.create('grp1', 'Definitions', 'comp1');
model.nodeGroup('grp1').set('type', 'selection');
model.nodeGroup('grp1').placeAfter([]);
model.nodeGroup('grp1').label('basics');
model.nodeGroup('grp1').add('selection', 'bottom_plate');
model.nodeGroup('grp1').add('selection', 'bottom_insulator');
model.nodeGroup('grp1').add('selection', 'top_insulator');
model.nodeGroup('grp1').add('selection', 'top_plate');
model.nodeGroup('grp1').add('selection', 'actuator');
model.nodeGroup('grp1').add('selection', 'surrounding');
model.nodeGroup('grp1').add('selection', 'surrounding_surfaces');
model.nodeGroup('grp1').add('selection', 'universe');
model.nodeGroup('grp1').add('selection', 'insulator');
model.nodeGroup('grp1').add('selection', 'bottom_insulator_domain');
model.nodeGroup('grp1').add('selection', 'top_insulator_domain');
model.nodeGroup('grp1').add('selection', 'electrodes');
model.nodeGroup('grp1').add('selection', 'interior_oil');
model.nodeGroup('grp1').add('selection', 'all_but_electrodes');
model.nodeGroup.create('grp2', 'Definitions', 'comp1');
model.nodeGroup('grp2').set('type', 'selection');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').placeAfter([]);
model.nodeGroup('grp2').label('comsol_noise');
model.nodeGroup('grp2').add('selection', 'noise_islands');
model.nodeGroup('grp2').add('selection', 'noise_islands_surfaces');
model.nodeGroup.create('grp3', 'Definitions', 'comp1');
model.nodeGroup('grp3').set('type', 'selection');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').placeAfter([]);
model.nodeGroup('grp3').label('interfaces');
model.nodeGroup('grp3').add('selection', 'bottom_interface_all');
model.nodeGroup('grp3').add('selection', 'top_interface_all');
model.nodeGroup.create('grp4', 'Definitions', 'comp1');
model.nodeGroup('grp4').set('type', 'selection');
model.nodeGroup.move('grp4', 3);
model.nodeGroup('grp4').label('clipping_area');
model.nodeGroup('grp4').add('selection', 'left_edges');
model.nodeGroup('grp4').add('selection', 'right_edges');
model.nodeGroup('grp4').add('selection', 'right_edge_horiz');
model.nodeGroup('grp4').add('selection', 'left_edge_horiz');
model.nodeGroup('grp4').add('selection', 'clip_edges');
model.nodeGroup('grp4').placeAfter([]);
model.nodeGroup.create('grp5', 'Definitions', 'comp1');
model.nodeGroup('grp5').set('type', 'selection');
model.nodeGroup.move('grp5', 4);
model.nodeGroup('grp5').placeAfter([]);
model.nodeGroup('grp5').label('exposed_electrodes');
model.nodeGroup('grp5').add('selection', 'bottom_plate_exteriors');
model.nodeGroup('grp5').add('selection', 'bottom_exposed_electrode_all');
model.nodeGroup('grp5').add('selection', 'top_plate_exteriors');
model.nodeGroup('grp5').add('selection', 'top_exposed_electrode_all');
model.nodeGroup.create('grp6', 'Definitions', 'comp1');
model.nodeGroup('grp6').set('type', 'selection');
model.nodeGroup.move('grp6', 5);
model.nodeGroup('grp6').placeAfter([]);
model.nodeGroup('grp6').label('exposed_insulators');
model.nodeGroup('grp6').add('selection', 'bottom_noise_surfaces');
model.nodeGroup('grp6').add('selection', 'insulators_touch_points');
model.nodeGroup('grp6').add('selection', 'bottom_insulator_exposed_to_oil');
model.nodeGroup('grp6').add('selection', 'bottom_exposed_insulator_all');
model.nodeGroup('grp6').add('selection', 'top_noise_surfaces');
model.nodeGroup('grp6').add('selection', 'top_insulator_exposed_to_oil');
model.nodeGroup('grp6').add('selection', 'top_exposed_insulator_all');
model.nodeGroup.create('grp7', 'Definitions', 'comp1');
model.nodeGroup('grp7').set('type', 'selection');
model.nodeGroup.move('grp7', 6);
model.nodeGroup('grp7').placeAfter([]);
model.nodeGroup('grp7').label('processed_layers');
model.nodeGroup('grp7').add('selection', 'bottom_exposed_electrode');
model.nodeGroup('grp7').add('selection', 'bottom_interface');
model.nodeGroup('grp7').add('selection', 'bottom_exposed_insulator');
model.nodeGroup('grp7').add('selection', 'top_exposed_insulator');
model.nodeGroup('grp7').add('selection', 'top_interface');
model.nodeGroup('grp7').add('selection', 'top_exposed_electrode');

model.component('comp1').mesh.create('mesh1');
model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').create('ftri2', 'FreeTri');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('ftri1').selection.named('interior_oil');
model.component('comp1').mesh('mesh1').feature('ftri2').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('ftri2').selection.named('insulator');
model.component('comp1').mesh('mesh1').run;

model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat2').label('Steel AISI 4340');
model.component('comp1').material('mat2').set('family', 'steel');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat2').propertyGroup('def').descr('relpermeability_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]' '0' '0' '0' '4.032e6[S/m]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('electricconductivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]' '0' '0' '0' '12.3e-6[1/K]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', '475[J/(kg*K)]');
model.component('comp1').material('mat2').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat2').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('density', '7850[kg/m^3]');
model.component('comp1').material('mat2').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]' '0' '0' '0' '44.5[W/(m*K)]'});
model.component('comp1').material('mat2').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('Enu').set('youngsmodulus', '205e9[Pa]');
model.component('comp1').material('mat2').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.component('comp1').material('mat2').propertyGroup('Enu').set('poissonsratio', '0.28');
model.component('comp1').material('mat2').propertyGroup('Enu').descr('poissonsratio_symmetry', '');
model.component('comp1').material.create('mat3', 'Common');
model.component('comp1').material('mat3').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat3').label('Transformer oil');
model.component('comp1').material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('rho', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('pieces', {'243.0' '273.0' '4492.20229-64.7408879*T^1+0.349900959*T^2-8.40477E-4*T^3+7.57041667E-7*T^4'; '273.0' '373.0' '91.4524999-1.33227058*T^1+0.00777680216*T^2-2.27271368E-5*T^3+3.32419673E-8*T^4-1.94631023E-11*T^5'});
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('pieces', {'223.0' '293.0' '-117056.38+1816.76208*T^1-10.305786*T^2+0.0256691919*T^3-2.36742424E-5*T^4'; '293.0' '373.0' '-13408.1491+123.044152*T^1-0.335401786*T^2+3.125E-4*T^3'});
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('pieces', {'223.0' '373.0' '1055.04607-0.581753034*T^1-6.40531689E-5*T^2'});
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('pieces', {'223.0' '373.0' '0.134299084-8.04973822E-5*T^1'});
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat3').propertyGroup('def').descr('dynamicviscosity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat3').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('density', 'rho(T)');
model.component('comp1').material('mat3').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat3').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity', {'2.7' '0' '0' '0' '2.7' '0' '0' '0' '2.7'});
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity_symmetry', '0');
model.component('comp1').material('mat3').propertyGroup('def').addInput('temperature');
model.component('comp1').material.create('mat4', 'Common');
model.component('comp1').material('mat4').label('PVC - Polyvinyl chloride');
model.component('comp1').material('mat4').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat4').propertyGroup('def').set('thermalexpansioncoefficient', {'100e-6[1/K]' '0' '0' '0' '100e-6[1/K]' '0' '0' '0' '100e-6[1/K]'});
model.component('comp1').material('mat4').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('relpermittivity', {'4.6' '0' '0' '0' '4.6' '0' '0' '0' '4.6'});
model.component('comp1').material('mat4').propertyGroup('def').set('relpermittivity_symmetry', '0');
model.component('comp1').material('mat4').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('density', '1760[kg/m^3]');
model.component('comp1').material('mat4').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('def').set('thermalconductivity', {'0.1[W/(m*K)]' '0' '0' '0' '0.1[W/(m*K)]' '0' '0' '0' '0.1[W/(m*K)]'});
model.component('comp1').material('mat4').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('Enu').set('youngsmodulus', '2.9e9[Pa]');
model.component('comp1').material('mat4').propertyGroup('Enu').descr('youngsmodulus_symmetry', '');
model.component('comp1').material('mat4').propertyGroup('Enu').descr('poissonsratio_symmetry', '');
model.component('comp1').material('mat2').selection.named('electrodes');
model.component('comp1').material('mat3').selection.named('all_but_electrodes');
model.component('comp1').material('mat4').selection.named('insulator');

model.component('comp1').physics.create('es', 'Electrostatics', 'geom1');
model.component('comp1').physics('es').prop('d').set('d', 0.0127);
model.component('comp1').physics('es').field('electricpotential').field('V2');
model.component('comp1').physics('es').selection.named('all_but_electrodes');
model.component('comp1').physics('es').create('ccn2', 'ChargeConservation', 2);
model.component('comp1').physics('es').feature('ccn2').selection.named('insulator');
model.component('comp1').physics('es').create('term3', 'Terminal', 1);
model.component('comp1').physics('es').feature('term3').selection.named('bottom_plate');
model.component('comp1').physics('es').feature('term3').set('TerminalType', 'Voltage');
model.component('comp1').physics('es').create('term4', 'Terminal', 1);
model.component('comp1').physics('es').feature('term4').selection.named('top_plate');
model.component('comp1').physics('es').feature('term4').set('TerminalType', 'Voltage');
model.component('comp1').physics('es').feature('term3').set('V0', 0);
model.component('comp1').physics('es').feature('term4').set('V0', 0);

model.component('comp1').view('view1').axis.set('xmin', 0.058561697602272034);
model.component('comp1').view('view1').axis.set('xmax', 0.0896071121096611);
model.component('comp1').view('view1').axis.set('ymin', -0.020082393661141396);
model.component('comp1').view('view1').axis.set('ymax', 0.01298041082918644);

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');

model.sol.create('sol1');
model.sol('sol1').study('std2');
model.sol('sol1').attach('std2');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std2');
model.sol('sol1').runAll;

model.result.numerical.remove('interp_internal');
model.result.numerical.create('interp_internal', 'Interp');
model.result.numerical('interp_internal').selection.geom(0);
model.result.numerical('interp_internal').set('edim', 0);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('unit', {'N/m' 'N/m'});
model.result.numerical('interp_internal').set('complexfun', 'on');
model.result.numerical('interp_internal').set('matherr', 'off');
model.result.numerical('interp_internal').set('phase', 0);
model.result.numerical('interp_internal').set('recover', 'off');
model.result.numerical('interp_internal').set('evalmethod', 'harmonic');
model.result.numerical('interp_internal').set('differential', 'on');

model.sol('sol1').getSizeMulti;
model.sol('sol1').getSize;
model.sol('sol1').getPVals;
model.sol('sol1').getPValsImag;

model.result.numerical('interp_internal').selection.all;
model.result.numerical('interp_internal').set('coorderr', 'off');
model.result.numerical('interp_internal').set('solnum', {'1'});
model.result.numerical('interp_internal').set('outersolnum', 1);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('evalmethodactive', false);
model.result.numerical('interp_internal').set('outertype', 'none');
model.result.numerical('interp_internal').set('solvertype', 'none');
model.result.numerical('interp_internal').set('outersolnum', '1');
model.result.numerical('interp_internal').set('solnum', '1');
model.result.numerical('interp_internal').set('timeinterp', 'off');
model.result.numerical('interp_internal').getData(0);
model.result.numerical('interp_internal').set('solnum', {'1'});
model.result.numerical('interp_internal').set('outersolnum', 1);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('evalmethodactive', false);
model.result.numerical('interp_internal').set('outertype', 'none');
model.result.numerical('interp_internal').set('solvertype', 'none');
model.result.numerical('interp_internal').set('outersolnum', '1');
model.result.numerical('interp_internal').set('solnum', '1');
model.result.numerical('interp_internal').set('timeinterp', 'off');
model.result.numerical('interp_internal').getData(1);
model.result.numerical.remove('interp_internal');
model.result.numerical.remove('interp_internal');
model.result.numerical.create('interp_internal', 'Interp');
model.result.numerical('interp_internal').selection.geom(0);
model.result.numerical('interp_internal').set('edim', 0);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('unit', {'N/m' 'N/m'});
model.result.numerical('interp_internal').set('complexfun', 'on');
model.result.numerical('interp_internal').set('matherr', 'off');
model.result.numerical('interp_internal').set('phase', 0);
model.result.numerical('interp_internal').set('recover', 'off');
model.result.numerical('interp_internal').set('evalmethod', 'harmonic');
model.result.numerical('interp_internal').set('differential', 'on');

model.sol('sol1').getSizeMulti;
model.sol('sol1').getSize;
model.sol('sol1').getPVals;
model.sol('sol1').getPValsImag;

model.result.numerical('interp_internal').selection.all;
model.result.numerical('interp_internal').set('coorderr', 'off');
model.result.numerical('interp_internal').set('solnum', {'1'});
model.result.numerical('interp_internal').set('outersolnum', 1);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('evalmethodactive', false);
model.result.numerical('interp_internal').set('outertype', 'none');
model.result.numerical('interp_internal').set('solvertype', 'none');
model.result.numerical('interp_internal').set('outersolnum', '1');
model.result.numerical('interp_internal').set('solnum', '1');
model.result.numerical('interp_internal').set('timeinterp', 'off');
model.result.numerical('interp_internal').getData(0);
model.result.numerical('interp_internal').set('solnum', {'1'});
model.result.numerical('interp_internal').set('outersolnum', 1);
model.result.numerical('interp_internal').set('expr', {'es.Ey^2*epsilon0_const*es.d*4.65' 'es.Ex^2*epsilon0_const*es.d*4.65'});
model.result.numerical('interp_internal').set('evalmethodactive', false);
model.result.numerical('interp_internal').set('outertype', 'none');
model.result.numerical('interp_internal').set('solvertype', 'none');
model.result.numerical('interp_internal').set('outersolnum', '1');
model.result.numerical('interp_internal').set('solnum', '1');
model.result.numerical('interp_internal').set('timeinterp', 'off');
model.result.numerical('interp_internal').getData(1);
model.result.numerical.remove('interp_internal');

model.component('comp1').geom('geom1').feature('mir5').active(false);
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').run('mir4');
model.component('comp1').geom('geom1').run('ls2');
model.component('comp1').geom('geom1').feature.duplicate('ls3', 'ls2');
model.component('comp1').geom('geom1').feature('ls3').selection('vertex1').clear('ls1');
model.component('comp1').geom('geom1').feature('ls3').selection('vertex2').clear('copy5');
model.component('comp1').geom('geom1').feature('ls3').selection('vertex1').set('copy3', 58);
model.component('comp1').geom('geom1').feature('ls3').selection('vertex2').set('copy5', 58);
model.component('comp1').geom('geom1').run('ls3');
model.component('comp1').geom('geom1').run('mir4');
model.component('comp1').geom('geom1').run('mir4');
model.component('comp1').geom('geom1').run('csol6');
model.component('comp1').geom('geom1').runPre('mir4');
model.component('comp1').geom('geom1').feature('mir4').selection('input').set({'copy3' 'copy5' 'ls1' 'ls2' 'ls3' 'pol1'});
model.component('comp1').geom('geom1').run('mir4');
model.component('comp1').geom('geom1').run('csol5');
model.component('comp1').geom('geom1').runPre('csol5');
model.component('comp1').geom('geom1').feature('csol5').selection('input').set({'copy3' 'ls1' 'ls3' 'pol1'});
model.component('comp1').geom('geom1').run('csol5');
model.component('comp1').geom('geom1').feature('csol4').selection('input').set({'copy5' 'ls2' 'ls3' 'mir4(2)' 'pol1'});
model.component('comp1').geom('geom1').run('csol4');
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'copy5' 'mir4(1)' 'mir4(2)' 'mir4(4)' 'mir4(5)'});
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').runPre('csol7');
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'copy5' 'mir4(2)' 'mir4(4)' 'mir4(5)' 'mir4(6)'});
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').feature('csol7').active(false);
model.component('comp1').geom('geom1').runPre('csol6');
model.component('comp1').geom('geom1').feature('csol6').selection('input').set({'mir4(1)' 'mir4(3)' 'mir4(5)' 'mir4(6)'});
model.component('comp1').geom('geom1').run('csol6');
model.component('comp1').geom('geom1').feature('csol7').active(true);
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').run;

model.component('comp1').selection('interior_oil').set([1]);

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Electric Potential (es)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('data', 'dset1');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').feature('surf1').set('data', 'parent');

model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').physics('es').selection.set([1 3 4 6]);

model.component('comp1').selection('bottom_plate').set([2]);
model.component('comp1').selection('bottom_insulator').set([3]);
model.component('comp1').selection('top_insulator').set([4]);
model.component('comp1').selection('top_plate').set([5]);
model.component('comp1').selection('actuator').set([2 3 4 5]);
model.component('comp1').selection('insulator').set([3 4]);
model.component('comp1').selection('bottom_insulator_domain').set([3]);
model.component('comp1').selection('top_insulator_domain').set([4]);
model.component('comp1').selection('electrodes').set([2 5]);

model.component('comp1').physics('es').selection.named('all_but_electrodes');

model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').physics('es').feature('term3').set('V0', 6000);
model.component('comp1').physics('es').feature('term4').set('V0', -6000);

model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').geom('geom1').feature('mir4').active(false);
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').feature.move('r4', 3);
model.component('comp1').geom('geom1').feature.duplicate('r5', 'r4');
model.component('comp1').geom('geom1').feature.duplicate('r6', 'r4');
model.component('comp1').geom('geom1').feature.move('r4', 14);
model.component('comp1').geom('geom1').feature.move('r5', 6);
model.component('comp1').geom('geom1').feature.move('r6', 7);
model.component('comp1').geom('geom1').feature('r5').set('pos', {'-.1' '130e-6'});
model.component('comp1').geom('geom1').feature('r5').set('size', {'0.1+0.1' '130e-6'});
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').feature('r5').set('size', {'0.1+0.049430887' '130e-6'});
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').feature('r5').set('size', {'0.01+0.049430887' '130e-6'});
model.component('comp1').geom('geom1').feature('r5').set('pos', {'-.01' '130e-6'});
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').feature('r6').set('pos', {'-.01' '2*130e-6'});
model.component('comp1').geom('geom1').feature.remove('r6');
model.component('comp1').geom('geom1').feature.duplicate('r6', 'r5');
model.component('comp1').geom('geom1').feature('r6').set('pos', {'-.01' '2*130e-6'});
model.component('comp1').geom('geom1').feature('r6').setIndex('size', '100e-6', 1);
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').feature('r5').set('type', 'curve');
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').feature('r6').set('type', 'curve');
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').runPre('csol7');
model.component('comp1').geom('geom1').feature('csol7').selection('input').init;
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'r6'});
model.component('comp1').geom('geom1').runPre('csol6');
model.component('comp1').geom('geom1').feature('csol6').selection('input').set({'csol7'});
model.component('comp1').geom('geom1').runPre('csol7');
model.component('comp1').geom('geom1').feature('csol7').selection('input').init;
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'csol4'});
model.component('comp1').geom('geom1').feature('csol7').selection('input').init;
model.component('comp1').geom('geom1').feature('csol7').selection('input').set({'r5'});
model.component('comp1').geom('geom1').run('csol7');
model.component('comp1').geom('geom1').feature('csol6').selection('input').init;
model.component('comp1').geom('geom1').feature('csol6').selection('input').set({'r6'});
model.component('comp1').geom('geom1').run('csol6');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;

model.component('comp1').selection('left_edges').add([4]);
model.component('comp1').selection('right_edges').add([173]);
model.component('comp1').selection('right_edges').add([174]);
model.component('comp1').selection('right_edge_horiz').set('input', {});

model.result('pg2').run;
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').selection.named('bottom_interface');
model.result('pg2').feature('lngr1').set('expr', 'es.Ey');
model.result('pg2').run;
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', false);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('ylog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', true);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').feature.duplicate('lngr2', 'lngr1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').active(false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('descr', 'Electric field, y component Permittivity of vacuum');
model.result('pg2').feature('lngr2').set('expr', 'es.Ey^2*epsilon0_const');
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('expr', 'es.Ey^2*epsilon0_const*es.d');
model.result('pg2').run;

model.component('comp1').selection.remove('top_noise_surfaces');
model.component('comp1').selection.remove('top_insulator_exposed_to_oil');
model.component('comp1').selection.remove('top_exposed_insulator_all');
model.component('comp1').selection.remove('top_exposed_insulator');
model.component('comp1').selection.remove('top_interface');
model.component('comp1').selection.remove('top_exposed_electrode');
model.component('comp1').selection.remove('interior_oil');

model.component('comp1').geom('geom1').run('del3');
model.component('comp1').geom('geom1').create('pt1', 'Point');
model.component('comp1').geom('geom1').feature.move('pt1', 8);
model.component('comp1').geom('geom1').feature.move('pt1', 7);
model.component('comp1').geom('geom1').feature('pt1').setIndex('p', '2*130e-6', 1);
model.component('comp1').geom('geom1').run('pt1');
model.component('comp1').geom('geom1').feature.duplicate('pt2', 'pt1');
model.component('comp1').geom('geom1').feature.move('pt2', 9);
model.component('comp1').geom('geom1').feature('pt2').setIndex('p', '2*130e-6+100e-6', 1);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.component('comp1').selection.duplicate('bottom_exposed_electrode1', 'bottom_exposed_electrode');

model.nodeGroup('grp7').add('selection', 'bottom_exposed_electrode1');

model.component('comp1').selection.duplicate('bottom_interface1', 'bottom_interface');

model.nodeGroup('grp7').add('selection', 'bottom_interface1');

model.component('comp1').selection.duplicate('bottom_exposed_insulator1', 'bottom_exposed_insulator');

model.nodeGroup('grp7').add('selection', 'bottom_exposed_insulator1');

model.component('comp1').selection('bottom_exposed_electrode1').set('add', {});
model.component('comp1').selection.remove('bottom_exposed_electrode1');
model.component('comp1').selection.remove('bottom_interface1');
model.component('comp1').selection.remove('bottom_exposed_insulator1');
model.component('comp1').selection.duplicate('top_exposed_electrode_all1', 'top_exposed_electrode_all');

model.nodeGroup('grp5').add('selection', 'top_exposed_electrode_all1');

model.component('comp1').selection.move('top_exposed_electrode_all1', 30);
model.component('comp1').selection('top_exposed_electrode_all1').set('add', {'bottom_exposed_insulator_all'});
model.component('comp1').selection('bottom_exposed_insulator_all').label('bottom_exposed_insulator_all_pre');
model.component('comp1').selection('top_exposed_electrode_all1').label('bottom_exposed_insulator_all');
model.component('comp1').selection.duplicate('bottom_noise_surfaces1', 'bottom_noise_surfaces');

model.nodeGroup('grp6').add('selection', 'bottom_noise_surfaces1');

model.component('comp1').selection.duplicate('insulators_touch_points1', 'insulators_touch_points');

model.nodeGroup('grp6').add('selection', 'insulators_touch_points1');

model.component('comp1').selection.duplicate('bottom_insulator_exposed_to_oil1', 'bottom_insulator_exposed_to_oil');

model.nodeGroup('grp6').add('selection', 'bottom_insulator_exposed_to_oil1');

model.component('comp1').selection.duplicate('bottom_exposed_insulator_all1', 'bottom_exposed_insulator_all');

model.nodeGroup('grp6').add('selection', 'bottom_exposed_insulator_all1');

model.component('comp1').selection.duplicate('top_exposed_electrode_all2', 'top_exposed_electrode_all1');

model.nodeGroup('grp6').add('selection', 'top_exposed_electrode_all2');

model.component('comp1').selection.remove('insulators_touch_points1');
model.component('comp1').selection('bottom_noise_surfaces1').label('top_noise_surfaces');
model.component('comp1').selection('bottom_noise_surfaces1').set('input', {'top_insulator' 'noise_islands_surfaces'});
model.component('comp1').selection('bottom_insulator_exposed_to_oil1').set('input', {'top_insulator' 'surrounding_surfaces'});
model.component('comp1').selection('bottom_insulator_exposed_to_oil1').label('top_insulator_exposed_to_oil');
model.component('comp1').selection('bottom_exposed_insulator_all1').label('top_exposed_insulator_all_pre');
model.component('comp1').selection('bottom_exposed_insulator_all1').set('input', {'bottom_noise_surfaces1' 'bottom_insulator_exposed_to_oil1' 'insulators_touch_points'});
model.component('comp1').selection('top_exposed_electrode_all2').set('add', {'bottom_exposed_insulator_all1'});
model.component('comp1').selection('top_exposed_electrode_all2').label('top_exposed_insulator_all');
model.component('comp1').selection.duplicate('bottom_exposed_electrode1', 'bottom_exposed_electrode');

model.nodeGroup('grp7').add('selection', 'bottom_exposed_electrode1');

model.component('comp1').selection.duplicate('bottom_interface1', 'bottom_interface');

model.nodeGroup('grp7').add('selection', 'bottom_interface1');

model.component('comp1').selection.duplicate('bottom_exposed_insulator1', 'bottom_exposed_insulator');

model.nodeGroup('grp7').add('selection', 'bottom_exposed_insulator1');

model.component('comp1').selection('bottom_exposed_electrode1').set('add', {'top_exposed_electrode_all'});
model.component('comp1').selection('bottom_exposed_electrode1').label('top_exposed_electrode');
model.component('comp1').selection('bottom_interface1').set('subtract', {'clip_edges'});
model.component('comp1').selection('bottom_interface1').set('add', {'top_interface_all'});
model.component('comp1').selection('bottom_interface1').label('top_interface');
model.component('comp1').selection('bottom_exposed_insulator1').set('add', {'top_exposed_electrode_all2'});
model.component('comp1').selection('bottom_exposed_insulator1').label('top_exposed_insulator');
model.component('comp1').selection('bottom_exposed_insulator').set('add', {'top_exposed_electrode_all1'});

model.result('pg2').run;
model.result('pg2').feature('lngr2').selection.named('bottom_exposed_insulator1');
model.result('pg2').run;
model.result('pg2').feature('lngr2').selection.named('bottom_interface1');
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('xdata', 'reversedarc');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').set('expr', 'x');
model.result('pg2').feature('lngr1').active(true);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('twoyaxes', true);
model.result('pg2').setIndex('plotonsecyaxis', true, 0, 1);
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('xdata', 'expr');
model.result('pg2').feature('lngr2').set('xdataexpr', 'x');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').set('xdata', 'expr');
model.result('pg2').feature('lngr1').set('xdataexpr', 'x');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('legendmethod', 'manual');
model.result('pg2').feature('lngr2').setIndex('legends', 'top_interface', 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').set('expr', 'es.Ey^2*epsilon0_const*es.d');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').set('legend', true);
model.result('pg2').feature('lngr1').set('legendmethod', 'manual');
model.result('pg2').feature('lngr1').setIndex('legends', 'bottom_interface', 0);
model.result('pg2').run;
model.result('pg2').feature('lngr2').set('legend', true);
model.result('pg2').run;
model.result('pg2').set('twoyaxes', false);
model.result('pg2').run;
model.result('pg2').run;

model.component('comp1').mesh('mesh1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('ylog', true);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', false);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', true);
model.result('pg2').set('showmanualgrid', false);
model.result('pg2').set('showxspacing', false);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);
model.result('pg2').set('xlog', false);
model.result('pg2').set('showmanualgrid', true);
model.result('pg2').set('showxspacing', true);
model.result('pg2').set('showyspacing', false);
model.result('pg2').set('showsecyspacing', false);
model.result('pg2').set('showsecyextra', false);

out = model;
